{
  "course": {
    "department": "Communication Design",
    "slug": "F10-ART-332K",
    "section": "01",
    "context": "Interaction Design",
    "semester": "Spring 2023",
    "name": "Layout Systems",
    "meetingTimes": [
      {
        "days": "Mon/Wed",
        "time": "6:00pm–8:50pm",
        "location": "Walker 050",
        "purpose": "Class"
      }
    ],
    "instructors": [
      {
        "slug": "asiemsen",
        "lastName": "Siemsen",
        "firstName": "Abram",
        "basePath": "https://abesiemsen.github.io/layout2023spring/",
        "email": "asiemsen@wustl.edu",
        "phone": "314-323-0911"
      }
    ],
    "syllabus": "syllabus.snippet",
    "students": [

      {
        "slug":"MeeraBharat",
        "lastName": "Bharat",
        "firstName": "Meera",
        "status": "enrolled",
        "basePath": "https://Meerab02.github.io/layout2023spring/"
      },
      {
        "slug":"HannaFu",
        "lastName": "Fu",
        "firstName": "Hanna",
        "status": "enrolled",
        "basePath": "https://f-hanna.github.io/layout2023spring/"
      },
      {
        "slug":"KrissyGatuslao",
        "lastName": "Gatuslao",
        "firstName": "Krissy",
        "status": "enrolled",
        "basePath": "https://gatuslao.github.io/layout2023spring/"
      },
      {
        "slug":"HelenJiang",
        "lastName": "Jiang",
        "firstName": "Helen",
        "status": "enrolled",
        "basePath": "https://localhermit.github.io/layout2023spring/"
      },
      {
        "slug":"MinjuKim",
        "lastName": "Kim",
        "firstName": "Minju",
        "status": "enrolled",
        "basePath": "https://Minjujukim.github.io/layout2023spring/"
      },
      {
        "slug":"TaehoLee",
        "lastName": "Lee",
        "firstName": "Taeho",
        "status": "enrolled",
        "basePath": "https://taehoxogh.github.io/layout2023spring/"
      },
      {
        "slug":"YannyLiang",
        "lastName": "Liang",
        "firstName": "Yanny",
        "status": "enrolled",
        "basePath": "https://yanny-liang.github.io/layout2023spring/"
      },
      {
        "slug":"ShiyeonMonk",
        "lastName": "Monk",
        "firstName": "Shiyeon",
        "status": "enrolled",
        "basePath": "https://ShiyeonKu.github.io/layout2023spring/"
      },
      {
        "slug":"HyunseoRoh",
        "lastName": "Roh",
        "firstName": "Hyunseo",
        "status": "enrolled",
        "basePath": "https://Hyunseo-Roh.github.io/layout2023spring/"
      },
      {
        "slug":"PaigeSteuber",
        "lastName": "Steuber",
        "firstName": "Paige",
        "status": "enrolled",
        "basePath": "https://Paige-Steuber.github.io/layout2023spring/"
      },
      {
        "slug":"JeffreyWang",
        "lastName": "Wang",
        "firstName": "Jeffrey",
        "status": "enrolled",
        "basePath": "https://jeffreyw2021.github.io/layout2023spring/"
      },
      {
        "slug":"FloraWu",
        "lastName": "Wu",
        "firstName": "Flora",
        "status": "enrolled",
        "basePath": "https://WanrongWu.github.io/layout2023spring/"
      }      
    ],
    "dropped": [
      
    ],
    "sessions": [
      
    ],
    "projects": [
      {
        "slug": "getting-started",
        "name": "Getting Started",
        "hidden": false,
        "start": "2023-01-18",
        "end": "2023-01-18",
        "description": "<p>Get squared away with tools and resources.</p>",
        "deliverables": [
          {
            "slug": "local-directory",
            "name": "Local Directory",
            "hidden": false,
            "assigned": "2023-01-18",
            "due": "2023-01-18",
            "instructions": "<p>Create a local directory called <code>layout2023spring</code> in your documents directory. Inside this directory, create two sub-directories: <code>resources</code> and <code>publish</code>.</p><p><p>Each of these folders will eventually be further subdivided by project, and projects by deliverables. The specific project and deliverable folder name to use will be provided as part of each assignment.</p><em>Resources</em> is where you'll keep non-published files, such as Photoshop or Illustrator docs, notes, unprocessed images, etc. <em>Publish</em> will ONLY contain those files that will get uploaded to github as deliverables. Think of your github repository as a perfect reflection of your local <em>Publish</em> directory.</p>"
          },
          {
            "slug": "slack",
            "name": "Slack",
            "hidden": false,
            "assigned": "2023-01-18",
            "due": "2023-01-18",
            "instructions": "Join the class Slack workspace by clicking invitation link below.",
            "references": [
              {
                "name": "Invitation",
                "description": "Click to join.",
                "link": "https://join.slack.com/t/layout2023spring/shared_invite/zt-1naaadkaq-cUtlExQDYuznQgfF6hgXsA"
              }
            ]
          },
          {
            "slug": "github-account",
            "name": "Github Account",
            "hidden": false,
            "assigned": "2023-01-18",
            "due": "2023-01-18",
            "instructions": "<ul><li>Create a GitHub account (or use your existing one).</li><li>Slack me your GitHub url. It will look like: <code>https://github.com/abesiemsen</code>.</li></ul>",
            "references": [
              {
                "name": "github.com",
                "description": "Create account or login.",
                "link": "https://github.com"
              }
            ]
          },
          {
            "slug": "github-repo",
            "name": "Github Repository",
            "hidden": false,
            "assigned": "2023-01-18",
            "due": "2023-01-18",
            "instructions": "<ul><li>Create a GitHub repository for this class. Name it: <code>layout2023spring</code>. Make it public, and check the box for <em>Initialize this repository with a README</em>.</li><li>Go to <em>settings</em>, scroll down to <em>GitHub Pages</em>, and select <em>master branch</em> from the <em>source</em> dropdown. This will make your uploaded work publicly accessible, so the class-website can find it.</li></ul>",
            "references": [
              {
                "name": "github.com/new",
                "description": "Create a 'layout2023spring' repository.",
                "link": "https://github.com/new"
              }
            ]
          }
        ]
      },

      {
        "slug": "news-story-template",
        "name": "News Story Template",
        "hidden": false,
        "start": "2023-01-18",
        "end": "2023-02-22",
        "description": "<p>You will create a template to display a list of news stories. The stories themselves will be dynamic content &mdash; you will not have direct control over their content. However, you will design, style, and build the template used to display them.</p><p>This template will be responsive (work visually at any device or browser width).</p><p>The template must accomodate:</p><ul><li>Title</li><li>Description</li><li>Publish date</li><li>Primary image</li><li>Source name and url</li><li>Body copy (partial)</li></ul><h3>Learning Objectives</h3><ul><li>Manage single-column responsive content</li><li>Learn about and build templates for dynamic data</li><li>Gain experience with a templating syntax</li><li>Define style systems, not one-off instructions</li><li>Refine aesthetic decision-making for screens</li><li>Design in the browser</li></ul>",
        "deliverables": [
          {
            "slug": "starter-file",
            "name": "Starter File",
            "hidden": false,
            "assigned": "2023-01-18",
            "due": "2023-01-18",
            "file": "index.html",
            "description": "<p>To get going, you'll need this starter file.</p>",
            "instructions": "<p>Right-click on <code>starter.html</code> below, and choose <code>Save link as...</code>. Save it as <code>index.html</code>, in your <code>publish</code> folder, in the path shown below.</p><p>Upload to github once it's working locally.</p>",
            "references": [
              {
                "name": "starter.html",
                "link": "projects/news-story-template/starter.html",
                "description": "This is the starting point for your own template."
              }
            ]
          },
          {
            "slug": "primary-text-layout",
            "name": "Primary Text Layout",
            "hidden": false,
            "assigned": "2023-01-23",
            "due": "2023-01-25",
            "file": "index.html",
            "references": [
              {
                "name": "Vue.js",
                "link": "https://vuejs.org/v2/guide/syntax.html",
                "description": "A reference for the Vue template syntax."
              },
              {
                "name": "HTML 5 Doctor",
                "link": "http://html5doctor.com/",
                "description": "This page is somewhat dated, but it does a good job of breaking html elements into logical groups, and has good information about what each element is intended to represent."
              }
            ],
            "description": "<p>We'll take an iterative approach to designing our news stories page. We'll design in the browser, using a 'mobile first' approach. We'll add markup to organize the information on the page, and we'll define some basic style rules to handle content. We will <strong>not</strong> handle page layout yet – we're just cleaning up the browser defaults for text to make our story content more presentable.",
            "instructions": "<p>Add structure and CSS to apply your style choices.</p><p>To make it easier to 'ignore' page layout, let's add this style to the page:<br><code>body { max-width: 360px; margin: auto; }</code>. This will force us into a 'mobile only' view.</p>"
          },
          {
            "slug": "responsive-strategies",
            "name": "Responsive Strategies",
            "hidden": false,
            "assigned": "2023-01-23",
            "due": "2023-01-30",
            "file": "index.html",
            "references": [
              {
                "name": "Strategies",
                "link": "projects/news-story-template/responsive-strategies.pdf",
                "description": "A wireframe of the two strategies you will demonstrate."
              },
              {
                "name": "A Complete Guide to Flexbox",
                "link": "https://css-tricks.com/snippets/css/a-guide-to-flexbox/",
                "description": "A useful reference explaining the different ways flex layout can help you arrange things."
              },
              {
                "name": "A Complete Guide to CSS Grid",
                "link": "https://css-tricks.com/snippets/css/complete-guide-grid/",
                "description": "A useful reference explaining the different ways grid layout can help you arrange things."
              }
            ],
            "description": "<p>In class, we will discuss two possible layout strategies (see reference) for a responsive list of news story teasers. We'll begin applying the first strategy together in class, you'll be responsible for implementing the second strategy on your own.</p>",
            "instructions": "<p>Use <code>deliverable.json</code> to present two deliverables: one for Strategy A, one for Strategy B.</p>"
          },
          {
            "slug": "featured-story-teaser",
            "name": "Featured Story Teaser",
            "hidden": false,
            "assigned": "2023-01-30",
            "due": "2023-02-01",
            "file": "index.html",
            "references": [],
            "description": "<p>Add the Featured Story to your page, using two different responsive layout strategies. The particulars of the strategies are up to you, but the featured stories in your two versions should be different in terms of layout, not just style.</p><p>Although the data source we have doesn't provide more information than you've already seen, feel free to consider whether other content elements <em>should</em> be included. Author? Location? Feel free to add 'static' versions of these elements as you see fit, to demonstrate how they would work in the layout, even though they won't change with the story data.</p><p>Along with the layout and content additions, consider other variables that could change for the featured story visually: Font-size? Typeface? Framing differences? Color? How might these factor into your responsive strategy implementation?</p><p>Use whatever version of the 'other' stories you prefer &mdash; could be an existing version, could be a new version  &mdash;  but make sure your featured story treatment 'fits' visually with the rest of the page.<p>",
            "instructions": "<p>Use <code>deliverable.json</code> to present two versions of your page, featured story included.</p>"
          },
          {
            "slug": "news-site-branding",
            "name": "News Site Branding",
            "hidden": false,
            "assigned": "2023-01-30",
            "due": "2023-02-06",
            "file": "index.html",
            "references": [],
            "description": "<p>Create a brand for your news site. Name it, give it a tag line, develop a simple color palette, and ultimately create something along the lines of a styled 'masthead' to use on the site. Use whatever design tools you prefer to explore ideas. Upload a page that shows me where you've landed, but also document your ideas, iterations, concepts, etc. <em>The deliverable will not be an iteration of the existing news site, it will just be a page with branding concepts, and your selected final direction.</em> I'll expect you to refine the brand as we move into future aspects of the project, but don't expect dedicated time for it &mdash; this week is your one chance to focus entirely on this aspect of the project!</p>",
            "instructions": "<p>Don't worry about rendering the brand in HTML/CSS yet, if you prefer not to. You may deliver an HTML page with embedded images exported from other tools, photos of drawings, whatever, but understand that ultimately the finished design it will end up being part of an HTML page, so consider ramifications of font-choices, etc.</p>"
          },
          {
            "slug": "responsive-masthead",
            "name": "Responsive Masthead",
            "hidden": false,
            "assigned": "2023-02-06",
            "due": "2023-02-13",
            "file": "index.html",
            "description": "<p>Referring to your branding concept, build a responsive masthead and menu for your news page, and style the news content as needed to conform with your brand.</p>",
            "instructions": "<p>This version of your page should include your site name/tagline, featured story, and secondary stories. You can use the responsive strategy of your choice for each element. The site masthead should include a menu which 'collapses' into a hamburger menu at smaller sizes. (The menu items don't have to actually link to anything.)</p>"
          },
          {
            "slug": "built-with-bootstrap",
            "name": "Built with Bootstrap",
            "hidden": false,
            "assigned": "2023-02-06",
            "due": "2023-02-15",
            "file": "index.html",
            "references": [
              {
                "name": "Bootstrap Documentation",
                "link": "https://getbootstrap.com/docs/5.3/getting-started/introduction/",
                "description": "Familiarize yourself with this documentation. Pay particular attention to the Layout and Components sections, but be aware there are tools that may be useful to you outside these sections."
              }
            ],
            "description": "<p>Bootstrap is a front-end toolkit that provides a grid-system and numerous components for building pages in a standardized way. You will create a version of the news story page using Bookstrap, <strong><em>Instead</em></strong> of your own CSS. For the purposes of this deliverable, don't worry about your custom brand/masthead. Instead use standard Bootstrap components as needed to create a generic masthead.</p>",
            "instructions": "<p>Create a version of the page that is a finished responsive layout of the news page with virtually no 'custom' css at all.</p>"
          },
          {
            "slug": "finished template",
            "name": "Finished Template",
            "hidden": false,
            "assigned": "2023-02-06",
            "due": "2023-02-27",
            "file": "index.html",
            "description": "<p>Make the final portfolio-ready version of your news template. (This should be based on your 'custom' layout, not the Bootstrap version.)</p>",
            "instructions": "<p>This final deliverable should include:</p><ul><li>Your custom site masthead and menu</li><li>The featured story teaser</li><li>A list/grid of secondary story teasers</li><li>Any static placeholders you've added to represent elements not available from our dataset.</li><li>A site footer, including:<ul><li>Social media nav (unless you have this elsewhere on the page already)</li><li>'Business' nav (Privacy Policy, Terms and Conditions, Contact Us, etc)</li><li>Copyright/disclosure text, including a source link to <a href=\"https://gnews.io/\">GNews, our API data source.</a></li><li>Whatever information you want to include to take credit for the layout.</li></ul></li><li>Style choices for all elements consistent with your brand.</li></ul><p><strong>All page elements should be responsive, working visually at any screen width from 320px up.</strong></p>"
          }

        ]
      },

      {
        "slug": "control-panel",
        "name": "Rent-a-Roadtrip Control Panel",
        "hidden": false,
        "start": "2023-02-22",
        "end": "2023-03-27",
        "description": "<p>'Control Panel' interfaces tend present a very different set of needs and challenges than a typical website. Design is focused more strongly on function, efficiency, and consistency. Layouts are often more complicated and conditional. They are also often a good fit for a component-based approach – they can be built using pre-fab parts, and tend not to need very customized styles, as they are not usually public-facing. Systems like Bootstrap are therefore often a good fit.</p><p>In this project, you will participate in constructing an HTML prototype control panel layout for a hypothetical business called 'Rent-a-Roadtrip.' The business specializes in vehicle rentals for road adventures: think convertibles touring the Pacific coast, RV trips through the American southwest, spring-break trips to Florida.You are not designing, however, for the renter. Instead, you are designing for employees – the booking specialists who take calls and make reservations over the phone or in-person.</p><p>Your design challenge will be less about making things look beautiful, and more about making things be organized and easy to access. You will need to design for data collection and data retrieval. You will implement forms, error messages, lists, details, and navigation.</p><p>The scope of this project is potentially vast, so part of our task will be to figure out together how much is reasonable to take on, and how best to do it. Expect some collaboration!</p>",
        "references": [
          {
            "name": "getbootstrap.com",
            "link": "https://getbootstrap.com",
            "description": "Documentation and examples for the Bootstrap front-end framework."
          },
          {
            "name": "Requirements brainstorming doc",
            "link": "https://docs.google.com/document/d/1PH3X5IhaW_QR0cMBHyYtKHr8jNBKbXcIctVckBViwdo/edit?usp=sharing",
            "description": "Our collaborative notes about what this project might include."
          }
        ],
        "examples": [
          
        ],
        "groups": [
          {
            "slug": "group-1",
            "name": "Meera | Hanna | Krissy",
            "basePath": "https://abesiemsen.github.io/layout2023_control-panel_group-1/"
          },
          {
            "slug": "group-2",
            "name": "Helen | Minju | Taeho",
            "basePath": "https://abesiemsen.github.io/layout2023_control-panel_group-2/"
          },
          {
            "slug": "group-3",
            "name": "Yanny | Shiyeon |  Hyunseo",
            "basePath": "https://abesiemsen.github.io/layout2023_control-panel_group-3/"
          },
          {
            "slug": "group-4",
            "name": "Page | Jeffrey | Flora",
            "basePath": "https://abesiemsen.github.io/layout2023_control-panel_group-4/"
          }
        ],
        "deliverables": [
          {
            "slug": "master-template",
            "name": "Master Template",
            "hidden": false,
            "useGroups": true,
            "assigned": "2023-03-01",
            "due": "2023-03-06",
            "file": "index.html",
            "description": "<p>For this project, we will build the Reservation lookup/create/edit system. Most of the other sub-systems of our dashboard relate to reservations, so we'll plan to create 'stub' representations of those sub-parts: The vehicle selector, the route selector, etc.</p><p>For now, we'll start by defining the Master Template: the basic HTML structure that all pages will share: elements like header and footer, but also the 'constraints' for main content layout &mdash; such as a standard grid system, global sidebar nav, etc. Consider putting some placeholder content elements in the template just to confirm that the template works as expected with content. The template should work at any size from 768px wide to 1920px wide.</p>",
            "instructions": "<p>Work with your group partners to create a single 'master template' page.</p><p><s>Only one person in your group will need to turn in this deliverable.</s></p><p>Work with your group to make sure your group repository includes this deliverable.</p>",
            "references": [
            ],
            "examples": [
            ]
          },
          {
            "slug": "form-examples",
            "name": "Exercise: Form Examples",
            "hidden": false,
            "assigned": "2023-03-01",
            "due": "2023-03-06",
            "file": "index.html",
            "description": "<p>Forms, form elements, and form layout are an important part of web design, and a key aspect of this project. This exercise will have you familarize yourself with Bootstrap's tools for building forms by reading the documentation, then demonstrate your understanding by building an example form.</p><p>Do this assignment individually, not as part of your project group.</p>",
            "instructions": "<p>Read the Bootstrap Forms Documentation section referenced below. (You can skip the Validation section for now.)</p><p>Make an example page, with (at minimum) these elements:</p><ul><li>A Text Input</li><li>A Password Input</li><li>A Select List with 4 options</li><li>A Checkbox with a label</li><li>An Input Group with the prefix 'https://'</li><li>A submit button (Note that buttons are covered in a different part of the Bootstrap documentation)</li></ul><p>Every element should be labeled.</p>",
            "references": [
              {
                "name": "Bootstrap Forms Documentation",
                "link": "https://getbootstrap.com/docs/5.3/forms/overview/",
                "description": "Bootstrap's documentation for form elements and best practices."
              }
            ],
            "examples": [
            ]
          },
          {
            "slug": "wireframe",
            "name": "Clickable Wireframe",
            "hidden": false,
            "useGroups": true,
            "assigned": "2023-03-06",
            "due": "2023-03-20",
            "file": "index.html",
            "description": "<p>With your Master Template complete, it's time to wireframe our control-panel in code. Decide what pages will exist, and what major sections exist on each page. Create placeholders for these pages and sections. Provide enough information so that we understand what each page and section represents and what it's responsibility will be, but don't worry yet about all the details in each section. Our goal is to create the 'outline' that we'll refine and add detail to in later steps. Some questions to consider:</p><ul><li>Can you make decisions about html structure here that can carry through to the final version?</li><li>What Bootstrap components or tools might be applicable at this stage?</li><li>Do you need to establish additional 'standards' beyond what your Master Template has defined?</li><li>What comments or other systems might be useful within your code to help create clarity between group members?</li><li>How might the decisions you make at this step affect your ability to distribute future work within your group?</li></ul>",
            "instructions": "<p>Work with your group partners to 'map out' the different parts of the control panel, and link them together as needed with navigation.</p><p>Work with your group to make sure your group repository includes this deliverable.</p><p>",
            "references": [
            ],
            "examples": [
            ]
          },
          {
            "slug": "final",
            "name": "Final Control Panel",
            "hidden": false,
            "useGroups": true,
            "assigned": "2023-03-20",
            "due": "2023-03-29",
            "file": "index.html",
            "description": "<p>Having reviewed everyone's wireframes, it's clear I did a poor job of helping shortcut the UX process so that we could focus more on the UI layout. In effort to remedy that, I discussed with each group the idea of approaching the reservation as a summary of five major 'areas':</p><ul><li>Customer</li><li>Vehicle</li><li>Location/Route</li><li>Schedule</li><li>Cost</li></ul><p>Further, for the purposes of this assignment, we want to think of each of those five areas in their 'empty' or 'starting' state (Like the \"Where do you want to fly today?\" widget on an airline homepage), and the finished/complete state (\"Here's a summary of your reservation\") but we will NOT focus on the detailed UX/UI processes that come in between.</p><p>I expect your final deliverable to include:</p><ul><li>A 'create a reservation' page/form, with each of the five areas above represented in it's initial state.</li><li>A way to search for existing reservations, and a list of search results, with each item in the list acting as a top-line summary of key reservation details.</li><li>The ability to click on a search result to see a 'detail' page for that reservation. The detail page should include the 'finished' view of each of the five areas above. It should provide enough information to answer most questions about the reservation, but does not need to demonstrate HOW you got to the finished state. That is, show me all the details about the selected vehicle, but don't worry about modeling the process of FINDING a vehicle.</li></ul><p>As much as possible, focus your attention on layout (how should this information be grouped and arranged), and on implementing those layout decisions using Bootstrap.</p>",
            "instructions": "<p>Work with your group members to create final pages/views as described above.</p>",
            "references": [
            ],
            "examples": [
            ]
          }
        ]
      },

      {
        "slug": "game-ui",
        "name": "Game UI",
        "hidden": false,
        "start": "2023-03-29",
        "end": "2023-04-26",
        "description": "<p>You will design and build a game interface (not the whole game!) using html/css (and potentially javascript).</p><p>Picture the typical screen interface components of a game on a computer or mobile device. Depending on the game mechanics, these components might include:</p><ul><li>Lives/Health/Energy indicators</li><li>Action bar (buttons to perform specifc actions like casting a spell or firing a weapon)</li><li>Weapon/skill selector</li><li>Mini-map or radar</li><li>Quest or mission objectives</li><li>Target display or information</li><li>Character information (level, class, etc.)</li><li>Inventory management</li><li>...you get the idea!</li></ul><p>We certainly don't have time to design and build an entire game, but we do have time to imagine one in broad-strokes, then consider a small handful of these kinds of interface components in greater detail. We can apply our knowledge of HTML and CSS to demonstrate interactively how these components might function superficially: that is, how they change color, shape, size, arrangement and so-forth as we use them.</p><p>Each component will likely incorporate aspects of <strong>identification</strong> (what it's for), <strong>interaction</strong> (how you use it), <strong>status</strong> (what is it's current state, what other states are possible), and <strong>feedback</strong> (acknowledgement of the user acting upon it).</p><p>You will design a small subset of components, think through the four aspects noted above, build the components in html/css/js, and place them on the screen as they would actually be positioned in a real game.</p><p>Consider that there are multiple levels of 'complexity' in this assignment:</p><ul><li>What game are we modeling?</li><li>What is appropriate stylistically?</li><li>What controls/displays does the game require?</li><li>How do these components handle the four aspects of interaction noted above?</li><li>How do we translate our visual intent into html and css?</li><li>How do we build html/css structures that can convey rapidly-changing visual information?</li><li>How do we handle screen-size variability?</li></ul><p>Learning Objectives:</p><ul><li>Develop facility with 'micro-layouts'.</li><li>Gain mastery of css positioning techniques, particularly with regarding to 'grouping'.</li><li>Increase familarity with css transformations, transitions, and animations.</li><li>Explore a broad range of interaction/feedback options.</li><li>Experiment with the interplay between javascript and css.</li></ul>",
        "references": [
        ],
        "examples": [
        ],
        "deliverables": [
          {
            "slug": "concept",
            "name": "Concept",
            "hidden": false,
            "assigned": "2023-03-29",
            "due": "2023-04-03",
            "file": "index.html",
            "description": "<p>Propose a game concept. Describe gameplay, enumerate the UI components you'd expect the game to have, and select the components you intend to build (the number is up to you, based on your availability, ambition, component complexity, etc). Here's a high-level example (greater specificity is probably appropriate for your deliverable):<p><p><em>&ldquo;My game is a World-War I fighter plane side-scroller. Each game level includes a take-off, some mission objective(s) such as recon behind enemy lines, survival through the enemy defenses, and a safe and successful landing (or tragic death!). The player must manage ammunition, fuel and oil, successfully navigate obstacles, accomplish the mission, and stay alive.</em></p><p><em>UI components include: flight instruments (altimeter, compass, clock), Mission guide (time to target, target indicator, mission-objective status, distance from home), a threat indicator, supply summary (ammunition, bombs, and fuel remaining), action bar (takeoff, land, fire machine gun, drop bomb, take picture), and mechanical status (how shot-up am I?).</em></p><p><em>I intent to build the flight instruments, the mission guide, and the action bar.</em>&rdquo;</p>",
            "instructions": "<p>Create and upload an HTML document that describes the game as detailed above. Include sketches, mockups, etc. as you see fit.<p>"
          },
          {
            "slug": "assets",
            "name": "Visual Assets",
            "hidden": false,
            "assigned": "2023-04-03",
            "due": "2023-04-10",
            "file": "index.html",
            "description": "Create artwork as needed for the visual assets you'll need, paying attention to layers and alignment. Export assets, and embed them all on an html page.",
            "instructions": "<p>Post an HTML file referencing the assets you have created.<p>",
            "references": [
              {
                "name": "Stopwatch Demo",
                "link": "projects/game-ui/stopwatch-demo/stopwatch.svg",
                "description": "The file Abe uses for the demo."
              },
              {
                "name": "Stopwatch Parts",
                "link": "projects/game-ui/stopwatch-demo/parts.zip",
                "description": "The stopwatch parts."
              },
              {
                "name": "Stopwatch Demo",
                "link": "https://wustl.zoom.us/rec/share/9LLhH-FZShBh29E_Jhi-VN5GMTNwyk4JvtcKzouzFSrg0SShYyls1DNb3E9v26k3.eY3UYc1soSk6CFvZ",
                "description": "The recording we made in class."
              }
              
            ]
          },
          {
            "slug": "layout",
            "name": "Layout",
            "hidden": false,
            "assigned": "2023-04-10",
            "due": "2023-04-17",
            "file": "index.html",
            "description": "<p>Assemble your visual assets into a layout in HTML. Pay attention to structural decisions: in terms of tag hierarchy, and also in terms of concept. What is the visual reference from which each element gets positioned? The screen? A container or sub-container? Does it make sense to measure/position from the side? corner? middle?</p>",
            "instructions": "<p>Post an HTML with your assets in your intended visual layout, and ready for animation / interaction.<p>",
            "references": [
              {
                "name": "Corner Pin Demo",
                "link": "projects/game-ui/corner-pin-demo/index.html",
                "description": "The demo page."
              },
              {
                "name": "Corner Pin Source",
                "link": "projects/game-ui/corner-pin-demo.zip",
                "description": "The demo source."
              }
            ]
          }
        ]
      },

      {
        "slug": "project-slug-goes-here",
        "name": "Project Name Goes Here",
        "hidden": true,
        "start": "2023-01-01",
        "end": "2023-01-01",
        "description": "Project description html goes here.",
        "references": [
          {
            "name": "Sample deliverable.json",
            "link": "reference/url/goes/here",
            "description": "Describe the reference here."
          }
        ],
        "examples": [
          {
            "name": "Sample deliverable.json",
            "link": "link/goes/here"
          }
        ],
        "deliverables": [
          {
            "slug": "deliverable-slug-goes-here",
            "name": "Deliverable Name Goes Here",
            "hidden": true,
            "assigned": "2023-01-01",
            "due": "2023-02-01",
            "file": "index.html",
            "description": "Deliverable description html goes here.",
            "instructions": "Deliverable instructions html goes here.",
            "references": [
              {
                "name": "Reference Name Goes Here",
                "link": "reference/url/goes/here",
                "description": "Describe the reference here."
              }
            ],
            "examples": [
              {
                "name": "Example Name Goes Here",
                "link": "example/url/goes/here"
              }
            ]
          }
        ]
      }



    ]
  }
}
